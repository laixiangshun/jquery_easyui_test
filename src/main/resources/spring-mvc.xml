<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">   

    <!-- 使用注解的包，包括子集 -->
    <context:component-scan base-package="com.java"/>
    
    <context:annotation-config /> 
    <!-- 添加注解驱动 -->    
    <mvc:annotation-driven />  
    
    <mvc:resources location="/" mapping="/**/*.js" />
	<mvc:resources location="/" mapping="/**/*.css" />
	<mvc:resources location="/" mapping="/**/*.png" />
	<mvc:resources location="/" mapping="/**/*.gif" />
	<mvc:resources location="/" mapping="/**/*.jpge" />
	<mvc:resources location="/" mapping="/**/*.jpg" />
	<mvc:resources location="/" mapping="/**/*.eot" />
	<mvc:resources location="/" mapping="/**/*.svg" />
	<mvc:resources location="/" mapping="/**/*.ttf" />
	<mvc:resources location="/" mapping="/**/*.woff" />
	<mvc:resources location="/" mapping="/**/*.woff2" />
	<mvc:resources location="/" mapping="/**/*.otf" />

	<mvc:resources location="/" mapping="/**/*.xls" />
	<mvc:resources location="/" mapping="/**/*.pdf" />
    <mvc:annotation-driven />  
    <mvc:default-servlet-handler/>
   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/pages/" />  
        <property name="suffix" value=".jsp" />  
    </bean> 
    <mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.java.interceptor.ValidateInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>  